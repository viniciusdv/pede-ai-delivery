{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\dsdelivery-sds2-main\\\\front-web\\\\src\\\\Orders\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport StepsHeader from \"./StepsHeader\";\nimport ProductList from './ProductList';\nimport { fetchProducts, saveOrder } from '../api';\nimport OrderLocation from './OrderLocation';\nimport OrderSummary from './OrderSummary';\nimport Footer from '../Footer';\nimport { checkIsSelected } from './Helpers';\nimport { toast } from 'react-toastify';\n\nfunction Orders() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [orderLocation, setOrderLocation] = useState();\n  const totalPrice = selectedProducts.reduce((sum, item) => {\n    return sum + item.price;\n  }, 0);\n  useEffect(() => {\n    fetchProducts().then(response => setProducts(response.data)).catch(() => {\n      toast.warning('Erro ao listar produtos');\n    });\n  }, []);\n\n  const handleSelectProduct = product => {\n    const isAlreadySelected = checkIsSelected(selectedProducts, product);\n\n    if (isAlreadySelected) {\n      const selected = selectedProducts.filter(item => item.id !== product.id);\n      setSelectedProducts(selected);\n    } else {\n      setSelectedProducts(previous => [...previous, product]);\n    }\n  };\n\n  const handleSubmit = () => {\n    const productsIds = selectedProducts.map(({\n      id\n    }) => ({\n      id\n    }));\n    const payload = { ...orderLocation,\n      products: productsIds\n    };\n    saveOrder(payload).then(response => {\n      toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\n      setSelectedProducts([]);\n    }).catch(() => {\n      toast.warning('Erro ao enviar pedido');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(StepsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products,\n        onSelectProduct: handleSelectProduct,\n        selectedProducts: selectedProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OrderLocation, {\n        onChangeLocation: location => setOrderLocation(location)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OrderSummary, {\n        amount: selectedProducts.length,\n        totalPrice: totalPrice,\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Orders, \"a0XR3mkaH+o1GuPfZzyP1pIgjB4=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["D:/dsdelivery-sds2-main/front-web/src/Orders/index.tsx"],"names":["React","useEffect","useState","StepsHeader","ProductList","fetchProducts","saveOrder","OrderLocation","OrderSummary","Footer","checkIsSelected","toast","Orders","products","setProducts","selectedProducts","setSelectedProducts","orderLocation","setOrderLocation","totalPrice","reduce","sum","item","price","then","response","data","catch","warning","handleSelectProduct","product","isAlreadySelected","selected","filter","id","previous","handleSubmit","productsIds","map","payload","error","location","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.css';\n\nimport StepsHeader from \"./StepsHeader\";\nimport ProductList from './ProductList'\nimport { OrderLocationData, Product } from './types';\nimport { fetchProducts, saveOrder } from '../api';\nimport OrderLocation from './OrderLocation';\nimport OrderSummary from './OrderSummary';\nimport Footer from '../Footer';\nimport { checkIsSelected } from './Helpers';\n\nimport { toast } from 'react-toastify';\n\nfunction Orders() {\n    const [products, setProducts] = useState<Product[]>([]);\n    const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\n    const [orderLocation, setOrderLocation] = useState<OrderLocationData>();\n\n    const totalPrice = selectedProducts.reduce((sum, item) => {\n        return sum + item.price;\n    }, 0);\n\n    useEffect(() => {\n        fetchProducts().then(response => setProducts(response.data)).catch(() => { toast.warning('Erro ao listar produtos'); })\n    }, []);\n\n    \n    const handleSelectProduct = (product: Product) => {\n        const isAlreadySelected = checkIsSelected(selectedProducts, product);\n    \n        if (isAlreadySelected) {\n            const selected = selectedProducts.filter(item => item.id !== product.id);\n            setSelectedProducts(selected);\n        } else {\n            setSelectedProducts(previous => [...previous, product]);\n        }\n    }\n\n    const handleSubmit = () => {\n        const productsIds = selectedProducts.map(({ id }) => ({ id }));\n        const payload = {\n          ...orderLocation!,\n          products: productsIds\n        }\n      \n        saveOrder(payload).then((response) => {\n          toast.error(`Pedido enviado com sucesso! Nº ${response.data.id}`);\n          setSelectedProducts([]);\n        }).catch(() => {\n            toast.warning('Erro ao enviar pedido');\n        })\n    }\n\n    return (\n        <>\n            <div className=\"orders-container\">\n                <StepsHeader />\n                <ProductList products={ products } onSelectProduct={ handleSelectProduct } selectedProducts={ selectedProducts } />\n                <OrderLocation onChangeLocation={ location => setOrderLocation(location) } />\n                <OrderSummary amount={ selectedProducts.length } totalPrice={ totalPrice } onSubmit={ handleSubmit } />\n            </div>\n            <Footer />\n        </>\n    );\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}