{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\dsdelivery-sds2-main\\\\front-web\\\\src\\\\Orders\\\\OrderLocation.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport AsyncSelect from 'react-select/async';\nimport { fetchLocalMapBox } from '../api';\nconst initialPosition = {\n  lat: -26.4821561,\n  lng: -49.0744284\n};\n\nfunction OrderLocation({\n  onChangeLocation\n}) {\n  _s();\n\n  const [address, setAddress] = useState({\n    position: initialPosition\n  });\n\n  const loadOptions = async (inputValue, callback) => {\n    const response = await fetchLocalMapBox(inputValue);\n    const places = response.data.features.map(item => {\n      return {\n        label: item.place_name,\n        value: item.place_name,\n        position: {\n          lat: item.center[1],\n          lng: item.center[0]\n        }\n      };\n    });\n    callback(places);\n  };\n\n  const handleChangeSelect = place => {\n    setAddress(place);\n    onChangeLocation({\n      latitude: place.position.lat,\n      longitude: place.position.lng,\n      address: place.label\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-location-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-location-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"order-location-title\",\n        children: \"Selecione onde o pedido deve ser entregue:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n          placeholder: \"Digite um endere\\xE7o para a entrega\",\n          className: \"filter\",\n          loadOptions: loadOptions,\n          onChange: value => handleChangeSelect(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: address.position,\n        zoom: 13,\n        scrollWheelZoom: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: address.position,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: address.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, address.position.lat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderLocation, \"Jb3FST0Syq7HAdUl5gEhY3r557Q=\");\n\n_c = OrderLocation;\nexport default OrderLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderLocation\");","map":{"version":3,"sources":["D:/dsdelivery-sds2-main/front-web/src/Orders/OrderLocation.tsx"],"names":["useState","MapContainer","TileLayer","Marker","Popup","AsyncSelect","fetchLocalMapBox","initialPosition","lat","lng","OrderLocation","onChangeLocation","address","setAddress","position","loadOptions","inputValue","callback","response","places","data","features","map","item","label","place_name","value","center","handleChangeSelect","place","latitude","longitude"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport AsyncSelect from 'react-select/async';\nimport { fetchLocalMapBox } from '../api';\nimport { OrderLocationData } from './types';\n\nconst initialPosition = {\n    lat: -26.4821561,\n    lng: -49.0744284\n}\n\ntype Place = {\n    label?: string;\n    value?: string;\n    position: {\n        lat: number;\n        lng: number;\n    };\n}\n\ntype Props = {\n    onChangeLocation: (location: OrderLocationData) => void;\n}\n\nfunction OrderLocation({ onChangeLocation }: Props) {\n\n    const [address, setAddress] = useState<Place>({ position: initialPosition });\n\n    const loadOptions = async (inputValue: string, callback: (places: Place[]) => void) => {\n        const response = await fetchLocalMapBox(inputValue);\n      \n        const places = response.data.features.map((item: any) => {\n          return ({\n            label: item.place_name,\n            value: item.place_name,\n            position: {\n              lat: item.center[1],\n              lng: item.center[0]\n            }\n          });\n        });\n      \n        callback(places);\n    };\n      \n    const handleChangeSelect = (place: Place) => {\n        setAddress(place);\n        onChangeLocation({\n          latitude: place.position.lat,\n          longitude: place.position.lng,\n          address: place.label!\n        });\n    };\n\n    return (\n        <div className=\"order-location-container\">\n            <div className=\"order-location-content\">\n                <h3 className=\"order-location-title\">Selecione onde o pedido deve ser entregue:</h3>\n                <div className=\"filter-container\">\n                    <AsyncSelect placeholder=\"Digite um endereÃ§o para a entrega\" className=\"filter\" loadOptions={ loadOptions }\n                    onChange={ value => handleChangeSelect(value as Place) } />\n                </div>\n                <MapContainer center={ address.position } zoom={ 13 } key={ address.position.lat } scrollWheelZoom>\n                    <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                    <Marker position={ address.position }>\n                        <Popup>\n                            { address.label }\n                        </Popup>\n                    </Marker>\n                </MapContainer>\n            </div>\n        </div>\n    );\n}\n\nexport default OrderLocation;\n"]},"metadata":{},"sourceType":"module"}